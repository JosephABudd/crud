/// This is the back-end messenger's API.
/// This file is re-generated by kickzig when you you add or remove a message.
const std = @import("std");

const _startup_ = @import("startup");

const EditContactMessenger = @import("EditContact.zig").Messenger;
const RebuildContactListMessenger = @import("RebuildContactList.zig").Messenger;
const RemoveContactMessenger = @import("RemoveContact.zig").Messenger;
const AddContactMessenger = @import("AddContact.zig").Messenger;

/// Messenger is the collection of the back-end messengers.
/// These messengers are how the back-end communicate with the front-end.
pub const Messenger = struct {
    allocator: std.mem.Allocator,
    EditContact_messenger: ?*EditContactMessenger,
    RebuildContactList_messenger: ?*RebuildContactListMessenger,
    RemoveContact_messenger: ?*RemoveContactMessenger,
    AddContact_messenger: ?*AddContactMessenger,

    pub fn deinit(self: *Messenger) void {
        if (self.EditContact_messenger) |member| {
            member.deinit();
        }
        if (self.RebuildContactList_messenger) |member| {
            member.deinit();
        }
        if (self.RemoveContact_messenger) |member| {
            member.deinit();
        }
        if (self.AddContact_messenger) |member| {
            member.deinit();
        }
        self.allocator.destroy(self);
    }

    /// init constructs a Messenger.
    /// It initializes each unique message handler.
    pub fn init(startup: _startup_.Backend) !*Messenger {
        var messenger: *Messenger = try startup.allocator.create(Messenger);
        errdefer {
            startup.allocator.destroy(messenger);
        }
        messenger.allocator = startup.allocator;
        messenger.EditContact_messenger = try EditContactMessenger.init(startup);
        errdefer messenger.deinit();
        messenger.RebuildContactList_messenger = try RebuildContactListMessenger.init(startup);
        errdefer messenger.deinit();
        messenger.RemoveContact_messenger = try RemoveContactMessenger.init(startup);
        errdefer messenger.deinit();
        messenger.AddContact_messenger = try AddContactMessenger.init(startup);
        errdefer messenger.deinit();
        return messenger;
    }
};
